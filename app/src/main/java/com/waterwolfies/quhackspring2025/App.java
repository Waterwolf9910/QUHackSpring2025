/*
 * This source file was generated by the Gradle 'init' task
 */
package com.waterwolfies.quhackspring2025;

import java.io.File;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.random.RandomGenerator;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

import javafx.application.Application;
import javafx.concurrent.Worker;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
import netscape.javascript.JSObject;

public class App extends Application {
    public String getGreeting() {
        return "Hello World!";
    }

    public static List<Person> list_of_people = new ArrayList<>();
    private static RandomGenerator random = RandomGenerator.getDefault();
    private static State state = new State();
    private static JSObject window;

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        for (int i = 0; i < 20; ++i) {
            var personalities = new ArrayList<String>(Refs.schedule.personality_list.keySet());
            list_of_people.add(new Person(
                Refs.names.get(random.nextInt(Refs.names.size())),
                // Refs.activities.get(random.nextInt(Refs.activities.size())),
                personalities.get(random.nextInt(personalities.size()))
            ));
        }
        System.out.println(Refs.schedule.schedule_list.get(0));
        launch(args);
    }


    @Override
    public void start(Stage primaryStage) throws Exception {
        // String javaVersion = System.getProperty("java.version");
        // String javafxVersion = System.getProperty("javafx.version");
        // Label l = new Label("Hello, JavaFX " + javafxVersion + ", running on Java " + javaVersion + ".");
        // Scene scene = new Scene(new StackPane(l), 640, 480);
        // primaryStage.setScene(scene);
        // primaryStage.show();
        // primaryStage.setTitle("Title!");
        // primaryStage.centerOnScreen();
        primaryStage.setTitle("Schedule Simulator");
        primaryStage.setResizable(false);
        WebView view = new WebView();
        view.setMinSize(1024, 1024);
        var engine = view.getEngine();
        engine.getLoadWorker().stateProperty().addListener((ob, old, _new) -> {
            if (_new != Worker.State.SUCCEEDED) {
                return;
            }
            window = (JSObject) engine.executeScript("window");
            window.setMember("java_state", state);
            boolean a = (Boolean) window.call("run");
            // window.call("setOptionOne", "Hello");
            System.out.println(a);
        });
        engine.loadContent(Files.readString(new File(getClass().getResource("/index.html").toURI()).toPath()));
        // engine.getDocument().getElementById("");
        
        var box = new VBox(view);
        Scene scene = new Scene(box, 1024, 1024);

        primaryStage.setScene(scene);
        primaryStage.show();
    }


//      int i = 60;
//  while (i>0){
//   System.out.println("Remaining: "i+" seconds");
//   try {
//     i--;
//     Thread.sleep(1000L);    // 1000L = 1000ms = 1 second
//    }
//    catch (InterruptedException e) {
//        //I don't think you need to do anything for your particular problem
//    }
//  }
//  System.out.println("Game Over);
// System.out.println("Your total score is) + points;

    /* public void GUI() {

        JFrame frame = new JFrame("Schedule Simulator");
        frame.setSize(800, 800);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); // make it so when JFrame is closed via the x button, the entire program stops
        frame.setLocationRelativeTo(null); // make JFrame open center screen
        frame.setResizable(false);
        
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(null); // no layout so you can put things wherever you want
        // mainPanel.setBackground(Color.BLUE);

        JTextField textbox = new JTextField();
        textbox.setBounds(400, 200, 175, 175);
        mainPanel.add(textbox);
        textbox.setText(math.Random(activities));
        Ref.activities.get(random.nextInt(Refs.activities.size()));

        JButton submitButton = new JButton("Submit");
        submitButton.setSize(100, 50);
        submitButton.setLocation(400, 0);
        
        submitButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("");
                helloLabel.setText("You have earned ");
            }
        });
        mainPanel.add(submitButton);
    } */

    public static class State {
        String text = "";

        public void printHello() {
            System.out.println("Hello");
        }

        public void setOptions() {
            var list = Refs.schedule.schedule_list;
            var person = list_of_people.get(random.nextInt(list_of_people.size()));
            window.call("setActvitiy", person, Refs.activities.get(random.nextInt(Refs.activities.size())));
            window.call("setOptionOne", list.get(random.nextInt(list.size())));
            window.call("setOptionTwo", list.get(random.nextInt(list.size())));
            window.call("setOptionThree", list.get(random.nextInt(list.size())));
            window.call("setOptionFour", list.get(random.nextInt(list.size())));
        }

        public void submit(boolean fromTimer) { // TODO
            System.out.println("Clicked");
        }
    }
    
}
